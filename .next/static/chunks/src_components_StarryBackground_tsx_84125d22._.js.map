{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Zeldo/Desktop/dev/onyxPortfolio/src/components/StarryBackground.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\ninterface Star {\r\n  x: number;\r\n  y: number;\r\n  radius: number;\r\n  alpha: number;\r\n  dAlpha: number;\r\n}\r\n\r\nexport default function StarryBackground() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) return;\r\n\r\n    let width = canvas.width = window.innerWidth;\r\n    let height = canvas.height = window.innerHeight;\r\n\r\n    // Generate stars\r\n    const numStars = 200;\r\n    const stars: Star[] = [];\r\n    for (let i = 0; i < numStars; i++) {\r\n      const radius = Math.random() * 1.5 + 0.5;\r\n      stars.push({\r\n        x: Math.random() * width,\r\n        y: Math.random() * height,\r\n        radius,\r\n        alpha: Math.random(),\r\n        dAlpha: (Math.random() * 0.02) * (Math.random() < 0.5 ? 1 : -1)\r\n      });\r\n    }\r\n\r\n    // Handle resize\r\n    const onResize = () => {\r\n      width = canvas.width = window.innerWidth;\r\n      height = canvas.height = window.innerHeight;\r\n    };\r\n    window.addEventListener('resize', onResize);\r\n\r\n    // Animation loop\r\n    let animationId: number;\r\n    const draw = () => {\r\n      if (!ctx) return;\r\n      ctx.clearRect(0, 0, width, height);\r\n\r\n      stars.forEach(star => {\r\n        // twinkle\r\n        star.alpha += star.dAlpha;\r\n        if (star.alpha <= 0 || star.alpha >= 1) star.dAlpha *= -1;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255,255,255,${star.alpha.toFixed(2)})`;\r\n        ctx.fill();\r\n      });\r\n\r\n      animationId = requestAnimationFrame(draw);\r\n    };\r\n    draw();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationId);\r\n      window.removeEventListener('resize', onResize);\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} className=\"absolute inset-0 z-0\" />;\r\n}"],"names":[],"mappings":";;;;AACA;;;AADA;;AAWe,SAAS;;IACtB,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAqB;IAE5C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,MAAM,SAAS,UAAU,OAAO;YAChC,IAAI,CAAC,QAAQ;YACb,MAAM,MAAM,OAAO,UAAU,CAAC;YAC9B,IAAI,CAAC,KAAK;YAEV,IAAI,QAAQ,OAAO,KAAK,GAAG,OAAO,UAAU;YAC5C,IAAI,SAAS,OAAO,MAAM,GAAG,OAAO,WAAW;YAE/C,iBAAiB;YACjB,MAAM,WAAW;YACjB,MAAM,QAAgB,EAAE;YACxB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,IAAK;gBACjC,MAAM,SAAS,KAAK,MAAM,KAAK,MAAM;gBACrC,MAAM,IAAI,CAAC;oBACT,GAAG,KAAK,MAAM,KAAK;oBACnB,GAAG,KAAK,MAAM,KAAK;oBACnB;oBACA,OAAO,KAAK,MAAM;oBAClB,QAAQ,AAAC,KAAK,MAAM,KAAK,OAAQ,CAAC,KAAK,MAAM,KAAK,MAAM,IAAI,CAAC,CAAC;gBAChE;YACF;YAEA,gBAAgB;YAChB,MAAM;uDAAW;oBACf,QAAQ,OAAO,KAAK,GAAG,OAAO,UAAU;oBACxC,SAAS,OAAO,MAAM,GAAG,OAAO,WAAW;gBAC7C;;YACA,OAAO,gBAAgB,CAAC,UAAU;YAElC,iBAAiB;YACjB,IAAI;YACJ,MAAM;mDAAO;oBACX,IAAI,CAAC,KAAK;oBACV,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO;oBAE3B,MAAM,OAAO;2DAAC,CAAA;4BACZ,UAAU;4BACV,KAAK,KAAK,IAAI,KAAK,MAAM;4BACzB,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,CAAC;4BAExD,IAAI,SAAS;4BACb,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;4BAClD,IAAI,SAAS,GAAG,CAAC,iBAAiB,EAAE,KAAK,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;4BAC5D,IAAI,IAAI;wBACV;;oBAEA,cAAc,sBAAsB;gBACtC;;YACA;YAEA;8CAAO;oBACL,qBAAqB;oBACrB,OAAO,mBAAmB,CAAC,UAAU;gBACvC;;QACF;qCAAG,EAAE;IAEL,qBAAO,6LAAC;QAAO,KAAK;QAAW,WAAU;;;;;;AAC3C;GA7DwB;KAAA","debugId":null}}]
}